# This is a workflow to see what will be affected with upcoming changes

name: Terraform PLAN

# Controls when the action will run. Triggers the workflow on pull request
# events but only for the master branch
on:
  pull_request:
    branches: [ master ]
    paths:
      - project-*/**

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "plan"
  plan:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    env:
      ARM_CLIENT_ID: ${{secrets.TERRAFORM_AZURE_SPN_ID}}
      ARM_CLIENT_SECRET: ${{secrets.TERRAFORM_AZURE_SPN_SECRET}}
      ARM_SUBSCRIPTION_ID: ${{secrets.TERRAFORM_AZURE_SUBSCRIPTION_ID}}
      ARM_TENANT_ID: ${{secrets.TERRAFORM_AZURE_TENANT_ID}}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Checks changes on specific paths
    - uses: dorny/paths-filter@v2
      id: project-iam
      with:
        filters: |
          src:
            - 'project-iam/**'

    - uses: dorny/paths-filter@v2
      id: project-core
      with:
        filters: |
          src:
            - 'project-core/**'
    
    - uses: dorny/paths-filter@v2
      id: project-apps-dev
      with:
        filters: |
          src:
            - 'project-apps-dev/**'

    # Set AWS credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.TERRAFORM_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.TERRAFORM_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1

    # Runs a `terraform plan` command for project-* using the runners shell
    - name: Run terraform PLAN for project-iam
      if: steps.project-iam.outputs.src == 'true'
      run: |
        cd ./project-iam
        terraform init
        terraform plan -var 'account_number=${{ secrets.AWS_ACCOUNT_NUMBER }}' \
                       -var-file=frankfurt.tfvars

    # Should be commented out on first deployment
    - name: Run terraform PLAN for project-core
      if: steps.project-core.outputs.src == 'true'
      run: |
        cd ./project-core
        terraform init
        terraform plan -var 'account_number=${{ secrets.AWS_ACCOUNT_NUMBER }}' \
                       -var-file=frankfurt.tfvars

    # Should be commented out on first and second deployment
    - name: Run terraform PLAN for project-apps-dev
      if: steps.project-apps-dev.outputs.src == 'true'
      run: |
        cd ./project-apps-dev
        terraform init
        terraform plan -var 'account_number=${{ secrets.AWS_ACCOUNT_NUMBER }}' \
                       -var-file=frankfurt.tfvars
